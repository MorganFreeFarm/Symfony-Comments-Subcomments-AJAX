<?php
declare(strict_types = 1);
namespace AppBundle\Repository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllByCategory(array $categoryId) : array
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.category = :categoryId')
            ->setParameter('categoryId', $categoryId)
            ->getQuery();

        return $qb->execute();
    }

    public function getLimitArticles(array $categoryId, int $limit = 3) : array
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.category = :categoryId')
            ->setParameter('categoryId', $categoryId)
            ->orderBy('a.dateAdded', 'DESC')
            ->setMaxResults($limit)
            ->getQuery();

        return $qb->execute();
    }

    public function getNextArticle(array $categoryId, string $articleId) : ?object
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.id > :articleId')
            ->andWhere('a.category = :categoryId')
            ->setParameter('categoryId', $categoryId)
            ->setParameter(':articleId', $articleId)
            ->orderBy('a.id', 'ASC')
            ->setFirstResult(0)
            ->setMaxResults(1);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getPreviousArticle(array $categoryId, string $articleId) : object
    {
        $qb = $this->createQueryBuilder('a')
            ->where('a.id < :articleId')
            ->andWhere('a.category = :categoryId')
            ->setParameter('categoryId', $categoryId)
            ->setParameter(':articleId', $articleId)
            ->orderBy('a.id', 'DESC')
            ->setFirstResult(0)
            ->setMaxResults(1);

        return $qb->getQuery()->getSingleResult();
    }

    public function getRandomArticle(array $categoryId, string $articleId) : ?object
    {
        $qb = $this->createQueryBuilder('a')
            ->addSelect('RAND() as HIDDEN rand')
            ->where('a.category = :categoryId')
            ->andWhere('a.id != :articleId')
            ->setParameter('categoryId', $categoryId)
            ->setParameter(':articleId', $articleId)
            ->addOrderBy('rand')
            ->setMaxResults(1)
            ->getQuery()->getOneOrNullResult();

        return $qb;
    }

}
